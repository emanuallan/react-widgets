import {createSDKInstance, createSDKInstanceProxy} from './sdk';

describe('SDK', () => {
  describe('createSDKInstance', () => {
    it('should resolve instance with config defaults', async () => {
      const instance = await createSDKInstance('abc123');

      expect(instance.config.appName).toBe('webex-widgets');
    });
    it('should resolve instance with appName passed in', async () => {
      const instance = await createSDKInstance('abc123', {name: 'test-app'});

      expect(instance.config.appName).toStrictEqual('webex-widgets-test-app');
    });
  });
  describe('createSDKInstanceProxy', () => {
    it('should resolve with instance proxy', async () => {
      const instance = await createSDKInstance('abc123', {name: 'old-name'});

      expect(instance.config.appName).toStrictEqual('webex-widgets-old-name');

      const proxyInstance = await createSDKInstanceProxy(instance, 'new-name');

      expect(proxyInstance.config.appName).toStrictEqual('webex-widgets-new-name');
      expect(proxyInstance.config.appVersion).toStrictEqual(process.env.REACT_WEBEX_VERSION);
    });
  });
});
